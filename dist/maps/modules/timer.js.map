{"version":3,"file":"../../script/modules/timer.js","names":["getTimeRemaining","deadline","dateStop","Date","UTCHours","getHours","getTimezoneOffset","setHours","timeLeft","now","days","Math","floor","hours","minutes","seconds","declOfNum","num","words","addZero","slice","createTimer","elem","innerHTML","timer","timerItemDays","document","querySelector","timerItemSeconds","timerCountDays","timerCountHours","timerCountMinutes","timerCountSeconds","timerUnitsDays","timerUnitsHours","timerUnitsMinutes","timerUnitsSeconds","startClock","textContent","timerId","setTimeout","style","display","clearTimeout","findTimer","querySelectorAll","forEach","dataset","timerDeadline"],"sources":["modules/timer.js"],"mappings":"AAEA,MAAMA,iBAAoBC,IACtB,MAAMC,EAAW,IAAIC,KAAKF,GAKpBG,EAFYF,EAASG,aACLH,EAASI,oBAAsB,GAErDJ,EAASK,SAASH,EAAW,GAE7B,MACMI,EAAWN,EADDC,KAAKM,MAQrB,MAAO,CACHD,WACAE,KAPSC,KAAKC,MAAMJ,EAAW,OAQ/BK,MAPUF,KAAKC,MAAOJ,EAAW,KAAoB,IAQrDM,QAPYH,KAAKC,MAAOJ,EAAW,IAAO,GAAM,IAQhDO,QAPYJ,KAAKC,MAAOJ,EAAW,IAAQ,IAQ9C,EAKCQ,UAAY,CAACC,EAAKC,IAAUA,EAC7BD,EAAM,IAAM,GAAKA,EAAM,IAAM,GAAM,EAChC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIA,EAAM,GAAK,EAAKA,EAAM,GAAK,IAKjDE,QAAUF,GAAO,IAAIA,IAAMG,OAAO,GAIlCC,YAAeC,IACjBA,EAAKC,UAAY,09BAoBZ,EAKHC,MAAQ,CAACvB,EAAUqB,KACrB,MAAMG,EAAgBC,SAASC,cAAc,qBACvCC,EAAmBF,SAASC,cAAc,wBAE1CE,EAAiBH,SAASC,cAAc,sBACxCG,EAAkBJ,SAASC,cAAc,uBACzCI,EAAoBL,SAASC,cAAc,yBAC3CK,EAAoBN,SAASC,cAAc,yBAE3CM,EAAiBP,SAASC,cAAc,sBACxCO,EAAkBR,SAASC,cAAc,uBACzCQ,EAAoBT,SAASC,cAAc,yBAC3CS,EAAoBV,SAASC,cAAc,yBAE3CU,EAAa,KACf,MAAM7B,SACFA,EAAQE,KACRA,EAAIG,MACJA,EAAKC,QACLA,EAAOC,QACPA,GACAf,iBAAiBC,GAIrB4B,EAAeS,YAAc5B,EAC7BoB,EAAgBQ,YAAcnB,QAAQN,GACtCkB,EAAkBO,YAAcnB,QAAQL,GACxCkB,EAAkBM,YAAcnB,QAAQJ,GAIxCkB,EAAeK,YAActB,UAAUN,EAAM,CAAC,OAAQ,MAAO,SAC7DwB,EAAgBI,YAActB,UACtBH,EAAO,CAAC,MAAO,OAAQ,UAC/BsB,EAAkBG,YAActB,UACxBF,EAAS,CAAC,SAAU,SAAU,UACtCsB,EAAkBE,YAActB,UACxBD,EAAS,CAAC,UAAW,UAAW,WAIxC,MAAMwB,EAAUC,WAAWH,EAAY,KAI1B,IAAT3B,GACAe,EAAcgB,MAAMC,QAAU,OAC9Bd,EAAiBa,MAAMC,QAAU,SAEjCd,EAAiBa,MAAMC,QAAU,OACjCjB,EAAcgB,MAAMC,QAAU,QAK9BlC,GAAY,IACZmC,aAAaJ,GACbjB,EAAKC,UAAY,GACrB,EAEJc,GAAY,SAKT,MAAMO,UAAY,KACHlB,SAASmB,iBAAiB,yBAElCC,SAASxB,IACf,MAAMrB,EAAWqB,EAAKyB,QAAQC,cAC9B3B,YAAYC,GACZE,MAAMvB,EAAUqB,EAAK,GACvB","sourcesContent":["// Считаем время до дедлайна\r\n\r\nconst getTimeRemaining = (deadline) => {\r\n    const dateStop = new Date(deadline);\r\n\r\n    // отображаем время UTC +3\r\n    const stopHours = dateStop.getHours();\r\n    const offsetHours = -(dateStop.getTimezoneOffset() / 60);\r\n    const UTCHours = stopHours - offsetHours;\r\n    dateStop.setHours(UTCHours + 3);\r\n\r\n    const dateNow = Date.now();\r\n    const timeLeft = dateStop - dateNow;\r\n\r\n    const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((timeLeft / (1000 * 60 * 60)) % 24);\r\n    const minutes = Math.floor((timeLeft / 1000 / 60) % 60);\r\n    const seconds = Math.floor((timeLeft / 1000) % 60);\r\n\r\n    return {\r\n        timeLeft,\r\n        days,\r\n        hours,\r\n        minutes,\r\n        seconds,\r\n    };\r\n};\r\n\r\n// Склонение дней, часов, минут, секунд\r\n\r\nconst declOfNum = (num, words) => words[\r\n    (num % 100 > 4 && num % 100 < 20) ? 2 :\r\n        [2, 0, 1, 1, 1, 2][(num % 10 < 5) ? num % 10 : 5]\r\n];\r\n\r\n// Добавляем 0 к одиночным цифрам часа, минут, секунд\r\n\r\nconst addZero = num => `0${num}`.slice(-2);\r\n\r\n// Создаем верстку\r\n\r\nconst createTimer = (elem) => {\r\n    elem.innerHTML = `\r\n        <p class=\"timer__title\">До конца акции:</p>\r\n        <div class=\"timer__items\">\r\n            <p class=\"timer__item timer__item_days\">\r\n                <span class=\"timer__count timer__count_days\"></span>\r\n                <span class=\"timer__units timer__units_days\"></span>\r\n            </p>\r\n            <p class=\"timer__item timer__item_hours\">\r\n                <span class=\"timer__count timer__count_hours\"></span>\r\n                <span class=\"timer__units timer__units_hours\"></span>\r\n            </p>\r\n            <p class=\"timer__item timer__item_minutes\">\r\n                <span class=\"timer__count timer__count_minutes\"></span>\r\n                <span class=\"timer__units timer__units_minutes\"></span>\r\n            </p>\r\n            <p class=\"timer__item timer__item_seconds\">\r\n                <span class=\"timer__count timer__count_seconds\"></span>\r\n                <span class=\"timer__units timer__units_seconds\"></span>\r\n            </p>\r\n        </div>\r\n        `;\r\n};\r\n\r\n// функционал таймера\r\n\r\nconst timer = (deadline, elem) => {\r\n    const timerItemDays = document.querySelector('.timer__item_days');\r\n    const timerItemSeconds = document.querySelector('.timer__item_seconds');\r\n\r\n    const timerCountDays = document.querySelector('.timer__count_days');\r\n    const timerCountHours = document.querySelector('.timer__count_hours');\r\n    const timerCountMinutes = document.querySelector('.timer__count_minutes');\r\n    const timerCountSeconds = document.querySelector('.timer__count_seconds');\r\n\r\n    const timerUnitsDays = document.querySelector('.timer__units_days');\r\n    const timerUnitsHours = document.querySelector('.timer__units_hours');\r\n    const timerUnitsMinutes = document.querySelector('.timer__units_minutes');\r\n    const timerUnitsSeconds = document.querySelector('.timer__units_seconds');\r\n\r\n    const startClock = () => {\r\n        const {\r\n            timeLeft,\r\n            days,\r\n            hours,\r\n            minutes,\r\n            seconds,\r\n        } = getTimeRemaining(deadline);\r\n\r\n        // отображаем значения таймера на странице\r\n\r\n        timerCountDays.textContent = days;\r\n        timerCountHours.textContent = addZero(hours);\r\n        timerCountMinutes.textContent = addZero(minutes);\r\n        timerCountSeconds.textContent = addZero(seconds);\r\n\r\n        // отображение подписей таймера в нужном падеже\r\n\r\n        timerUnitsDays.textContent = declOfNum(days, ['день', 'дня', 'дней']);\r\n        timerUnitsHours.textContent = declOfNum(\r\n                hours, ['час', 'часа', 'часов']);\r\n        timerUnitsMinutes.textContent = declOfNum(\r\n                minutes, ['минута', 'минуты', 'минут']);\r\n        timerUnitsSeconds.textContent = declOfNum(\r\n                seconds, ['секунда', 'секунды', 'секунд']);\r\n\r\n        // вызываем функцию каждую секунду\r\n\r\n        const timerId = setTimeout(startClock, 1000);\r\n\r\n        // меняем внешний вид счетчика, когда остается меньше 24 часов\r\n\r\n        if (days === 0) {\r\n            timerItemDays.style.display = 'none';\r\n            timerItemSeconds.style.display = 'flex';\r\n        } else {\r\n            timerItemSeconds.style.display = 'none';\r\n            timerItemDays.style.display = 'flex';\r\n        }\r\n\r\n        // останавливаем счетчик и удаляем таймер со страницы\r\n\r\n        if (timeLeft <= 0) {\r\n            clearTimeout(timerId);\r\n            elem.innerHTML = '';\r\n        }\r\n    };\r\n    startClock();\r\n};\r\n\r\n// запускаем плагин\r\n\r\nexport const findTimer = () => {\r\n    const dataTimer = document.querySelectorAll('[data-timer-deadline]');\r\n\r\n    dataTimer.forEach((elem) => {\r\n        const deadline = elem.dataset.timerDeadline;\r\n        createTimer(elem);\r\n        timer(deadline, elem);\r\n    });\r\n};\r\n\r\n"]}